[tool.poetry]
name = "app"
version = "0.1.0"
description = "Base app for Django"
authors = ["kai <thuan.dv0@gmail.com>"]
repository = "https://github.com/ThuanD/base_django"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.7"
django-cors-headers = "^4.4.0"
django-constance = "^3.1.0"
django-filter = "^24.2"
gunicorn = "^23.0.0"
python-dotenv = "^1.0.1"
pydantic = {extras = ["email"], version = "^2.10.4"}
flake8 = "^7.1.1"


[tool.poetry.group.dev.dependencies]
coverage = "^7.6.0"
django-dbbackup = "^4.1.0"
django-debug-toolbar = "^4.4.6"
django-extensions = "^3.2.3"
drf-spectacular = "^0.27.2"
flake8 = "^7.1.0"
flake8-pyproject = "^1.2.3"
flake8-builtins = "^2.5.0"
flake8-todo = "^0.7"
flake8-isort = "^6.1.1"
flake8-debugger = "^4.1.2"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^24.12.12"
flake8-comprehensions = "^3.16.0"
flake8-docstrings = "^1.7.0"
flake8-string-format = "^0.3.0"
flake8-broken-line = "^1.0.0"
flake8-annotations = "^3.1.1"
isort = "^5.13.2"
ipython = "^8.26.0"
pre-commit = "^3.8.0"
black = "^24.10.0"

[tool.poetry.group.test.dependencies]
coverage = "^7.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
extend_skip = [".md", ".json"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.bandit.assert_used]
skips = ["test_*.py"]

[tool.flake8]
application_import_names = "app"
max-line-length = 88
max-complexity = 10
exclude = [".git", "__pycache__", "build", "dist", "venv", ".venv"]
extend-ignore = ["ANN101", "ANN102", "D100", "D104"]
per-file-ignores = [
    "__init__.py: F401",
    "*/settings/*: F405",
    "*/migrations/*: E501",
]

[tool.flake8.plugins]
# Core Flake8 plugins
builtins = true
logging-format = true
todo = true
debugger = true

# Additional Flake8 plugins
banditbandit = true
bugbear = true
comprehensions = true
docstrings = true
string-format = true
broken-line = true
annotations = true

[tool.coverage.run]
source = ["."]
branch = true
omit = ["*/migrations/*"]

[tool.coverage.report]
ignore_errors = true
exclude_lines = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Other
    "pragma: no cover",
    "pass",
]

[tool.coverage.html]
directory = "htmlcov"
